apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default
data:
  MONGO_INITDB_DATABASE: real-time-notifications
  MONGO_URI: "mongodb://mongo-service:27017/real-time-notifications"

---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-secret
  namespace: default
type: Opaque
data:
  MONGO_ROOT_USERNAME: YWRtaW4=  # admin en base64
  MONGO_ROOT_PASSWORD: c2VjcmV0cGFzcw==  # secretpass en base64

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
  labels:
    app: mongo
spec:
  replicas: 1  # Puedes ajustar el número de réplicas si lo necesitas
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:5.0.13
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: MONGO_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: MONGO_ROOT_PASSWORD
        - name: MONGO_INITDB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: mongo-config
              key: MONGO_INITDB_DATABASE
        volumeMounts:
        - name: mongo-persistent-storage
          mountPath: /data/db
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  labels:
    app: mongo
spec:
  ports:
  - port: 27017
  selector:
    app: mongo

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
  labels:
    app: mongo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
